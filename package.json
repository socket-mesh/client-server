{
	"name": "@socket-mesh/main",
	"workspaces": [
		"packages/*"
	],
	"scripts": {
		"bundle": "cd packages/client && npm run bundle",
		"build": "npm run build:auth && npm run build:errors && npm run build:formatter && npm run build:core && npm run build:channels && npm run build:client && npm run build:auth-engine && npm run build:server",
		"build:auth": "cd packages/auth && npm run build",
		"build:auth-engine": "cd packages/auth-engine && npm run build",
		"build:channels": "cd packages/channels && npm run build",
		"build:client": "cd packages/client && npm run build",
		"build:core": "cd packages/core && npm run build",
		"build:formatter": "cd packages/formatter && npm run build",
		"build:errors": "cd packages/errors && npm run build",
		"build:server": "cd packages/server && npm run build",
		"deploy": "npm run deploy:auth && npm run deploy:errors && npm run deploy:formatter && npm run deploy:core && npm run deploy:channels && npm run deploy:client && npm run deploy:auth-engine && npm run deploy:server",
		"deploy:auth": "cd packages/auth && npm run deploy",
		"deploy:auth-engine": "cd packages/auth-engine && npm run deploy",
		"deploy:channels": "cd packages/channels && npm run deploy",
		"deploy:client": "cd packages/client && npm run deploy",
		"deploy:core": "cd packages/core && npm run deploy",
		"deploy:formatter": "cd packages/formatter && npm run deploy",
		"deploy:errors": "cd packages/errors && npm run deploy",
		"deploy:server": "cd packages/server && npm run deploy",
		"test": "npm run test:auth-engine && npm run test:formatter && npm run test:client && npm run test:server",
		"test:auth-engine": "cd packages/auth-engine && npm run test",
		"test:client": "cd packages/client && npm run test",
		"test:formatter": "cd packages/formatter && npm run test",
		"test:server": "cd packages/server && npm run test"
	},
	"devDependencies": {
		"@types/node": "^20.14.11",
		"cross-env": "^7.0.3",
		"ts-node": "^10.9.2",
		"typescript": "^5.5.3"
	}
}
