{
	"name": "@socket-mesh/main",
	"workspaces": [
		"packages/*"
	],
	"packageManager": "pnpm@9.7.0",
	"scripts": {
		"bundle": "cd packages/client && npm run bundle",
		"build": "npm run build:consumable-stream && npm run build:writable-consumable-stream && npm run build:stream-demux && npm run build:async-stream-emitter && npm run build:local-storage && npm run build:auth && npm run build:errors && npm run build:formatter && npm run build:core && npm run build:channels && npm run build:client && npm run build:auth-engine && npm run build:server",
		"build:async-stream-emitter": "cd packages/async-stream-emitter && npm run build",
		"build:auth": "cd packages/auth && npm run build",
		"build:auth-engine": "cd packages/auth-engine && npm run build",
		"build:channels": "cd packages/channels && npm run build",
		"build:client": "cd packages/client && npm run build",
		"build:consumable-stream": "cd packages/consumable-stream && npm run build",
		"build:core": "cd packages/core && npm run build",
		"build:formatter": "cd packages/formatter && npm run build",
		"build:errors": "cd packages/errors && npm run build",
		"build:local-storage": "cd packages/local-storage && npm run build",
		"build:server": "cd packages/server && npm run build",
		"build:stream-demux": "cd packages/stream-demux && npm run build",
		"build:writable-consumable-stream": "cd packages/writable-consumable-stream && npm run build",
		"clean": "node scripts/clean.mjs",
		"deploy": "npm run deploy:consumable-stream && npm run deploy:writable-consumable-stream && npm run deploy:stream-demux && npm run deploy:async-stream-emitter && npm run deploy:auth && npm run deploy:errors && npm run deploy:formatter && npm run deploy:core && npm run deploy:channels && npm run deploy:client && npm run deploy:auth-engine && npm run deploy:server",
		"deploy:async-stream-emitter": "cd packages/async-stream-emitter && npm run deploy",
		"deploy:auth": "cd packages/auth && npm run deploy",
		"deploy:auth-engine": "cd packages/auth-engine && npm run deploy",
		"deploy:channels": "cd packages/channels && npm run deploy",
		"deploy:client": "cd packages/client && npm run deploy",
		"deploy:consumable-stream": "cd packages/consumable-stream && npm run deploy",
		"deploy:core": "cd packages/core && npm run deploy",
		"deploy:formatter": "cd packages/formatter && npm run deploy",
		"deploy:errors": "cd packages/errors && npm run deploy",
		"deploy:local-storage": "cd packages/local-storage && npm run deploy",
		"deploy:server": "cd packages/server && npm run deploy",
		"deploy:stream-demux": "cd packages/stream-demux && npm run deploy",
		"deploy:writable-consumable-stream": "cd packages/writable-consumable-stream && npm run deploy",
		"generate:cert": "node ./scripts/generate-cert.mjs",
		"generate:jwt": "node ./scripts/generate-jwt.mjs",
		"prune": "node scripts/prune.mjs",
		"test": "npm run test:consumable-stream && npm run test:writable-consumable-stream && npm run test:stream-demux && npm run test:async-stream-emitter && npm run test:local-storage && npm run test:auth-engine && npm run test:formatter && npm run test:client && npm run test:server",
		"test:async-stream-emitter": "cd packages/async-stream-emitter && npm run test",
		"test:auth-engine": "cd packages/auth-engine && npm run test",
		"test:client": "cd packages/client && npm run test",
		"test:consumable-stream": "cd packages/consumable-stream && npm run test",
		"test:formatter": "cd packages/formatter && npm run test",
		"test:local-storage": "cd packages/local-storage && npm run test",
		"test:server": "cd packages/server && npm run test",
		"test:stream-demux": "cd packages/stream-demux && npm run test",
		"test:writable-consumable-stream": "cd packages/writable-consumable-stream && npm run test"
	},
	"devDependencies": {
		"@types/node": "catalog:node",
		"tsx": "catalog:",
		"typescript": "catalog:"
	}
}
